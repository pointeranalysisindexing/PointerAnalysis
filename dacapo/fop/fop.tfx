Array.newInstance;java.lang.Class[];java.util.Arrays.copyOf;2760;;
Array.newInstance;java.lang.String[];java.util.Arrays.copyOf;2760;;
Array.newInstance;sun.security.jca.ProviderConfig[];java.util.Arrays.copyOf;2760;;
Class.forName;dacapo.Benchmark;dacapo.Benchmark.class$;439;;
Class.forName;dacapo.Benchmark;dacapo.TestHarness.class$;60;;
Class.forName;dacapo.TestHarness;dacapo.TestHarness.class$;60;;
Class.forName;dacapo.fop.FopHarness;dacapo.TestHarness.findClass;414;;
Class.forName;dacapo.parser.Config;dacapo.TestHarness.class$;60;;
Class.forName;java.io.File;dacapo.TestHarness.class$;60;;
Class.forName;java.lang.Thread;org.apache.fop.apps.Options.class$;168;;
Class.forName;java.security.interfaces.RSAPrivateKey;java.security.Provider$Service.getKeyClass;1402;;
Class.forName;java.security.interfaces.RSAPublicKey;java.security.Provider$Service.getKeyClass;1402;;
Class.forName;java.util.CurrencyData;java.util.Currency$1.run;128;;
Class.forName;org.apache.fop.extensions.ExtensionElementMapping;org.apache.fop.apps.Driver.addElementMapping;448;;
Class.forName;org.apache.fop.fo.ElementMapping;org.apache.fop.apps.Driver.class$;319;;
Class.forName;org.apache.fop.fo.StandardElementMapping;org.apache.fop.apps.Driver.addElementMapping;448;;
Class.forName;org.apache.fop.svg.SVGElementMapping;org.apache.fop.apps.Driver.addElementMapping;448;;
Class.forName;org.apache.xerces.impl.dv.ObjectFactory;org.apache.xerces.impl.dv.ObjectFactory.class$;;;
Class.forName;org.apache.xerces.parsers.ObjectFactory;org.apache.xerces.parsers.ObjectFactory.class$;;;
Class.forName;sun.security.rsa.RSAKeyFactory;java.security.Provider$Service.getImplClass;1260;;
Class.forName;sun.security.rsa.RSASignature$SHA1withRSA;java.security.Provider$Service.getImplClass;1260;;
Class.getDeclaredField;<java.util.CurrencyData: int[] otherCurrenciesDFD>;java.util.Currency$1.run;136;isAccessible=false;
Class.getDeclaredField;<java.util.CurrencyData: int[] scNewCurrenciesDFD>;java.util.Currency$1.run;134;isAccessible=false;
Class.getDeclaredField;<java.util.CurrencyData: int[] scOldCurrenciesDFD>;java.util.Currency$1.run;133;isAccessible=false;
Class.getDeclaredField;<java.util.CurrencyData: java.lang.String mainTable>;java.util.Currency$1.run;129;isAccessible=false;
Class.getDeclaredField;<java.util.CurrencyData: java.lang.String otherCurrencies>;java.util.Currency$1.run;135;isAccessible=false;
Class.getDeclaredField;<java.util.CurrencyData: java.lang.String[] scNewCurrencies>;java.util.Currency$1.run;132;isAccessible=false;
Class.getDeclaredField;<java.util.CurrencyData: java.lang.String[] scOldCurrencies>;java.util.Currency$1.run;131;isAccessible=false;
Class.getDeclaredField;<java.util.CurrencyData: long[] scCutOverTimes>;java.util.Currency$1.run;130;isAccessible=false;
Class.getMethod;<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>;org.apache.fop.apps.Options.loadStandardConfiguration;167;isAccessible=false;
Class.newInstance;org.apache.fop.extensions.ExtensionElementMapping;org.apache.fop.apps.Driver.addElementMapping;448;;
Class.newInstance;org.apache.fop.fo.StandardElementMapping;org.apache.fop.apps.Driver.addElementMapping;448;;
Class.newInstance;org.apache.fop.svg.SVGElementMapping;org.apache.fop.apps.Driver.addElementMapping;448;;
Class.newInstance;org.apache.xerces.impl.dv.dtd.DTDDVFactoryImpl;org.apache.xerces.impl.dv.ObjectFactory.newInstance;;;
Class.newInstance;org.apache.xerces.jaxp.SAXParserFactoryImpl;javax.xml.parsers.FactoryFinder.newInstance;147;;
Class.newInstance;org.apache.xerces.parsers.XIncludeAwareParserConfiguration;org.apache.xerces.parsers.ObjectFactory.newInstance;;;
Class.newInstance;sun.awt.resources.awt;java.util.ResourceBundle$Control.newBundle;2295;;
Class.newInstance;sun.reflect.GeneratedConstructorAccessor$HASHED$0e4246823aa29aa7fbbff987b34b24f42d5ed30f;sun.reflect.MethodAccessorGenerator$1.run;381;;
Class.newInstance;sun.security.provider.SHA;java.security.Provider$Service.newInstance;1221;;
Class.newInstance;sun.security.provider.X509Factory;java.security.Provider$Service.newInstance;1221;;
Class.newInstance;sun.security.rsa.RSAKeyFactory;java.security.Provider$Service.newInstance;1221;;
Class.newInstance;sun.security.rsa.RSASignature$SHA1withRSA;java.security.Provider$Service.newInstance;1221;;
Class.newInstance;sun.security.rsa.SunRsaSign;sun.security.jca.ProviderConfig$4.run;259;;
Class.newInstance;sun.text.resources.FormatData;java.util.ResourceBundle$Control.newBundle;2295;;
Class.newInstance;sun.text.resources.FormatData_en;java.util.ResourceBundle$Control.newBundle;2295;;
Class.newInstance;sun.text.resources.FormatData_en_US;java.util.ResourceBundle$Control.newBundle;2295;;
Class.newInstance;sun.util.resources.CurrencyNames;java.util.ResourceBundle$Control.newBundle;2295;;
Class.newInstance;sun.util.resources.CurrencyNames_en_US;java.util.ResourceBundle$Control.newBundle;2295;;
Constructor.getModifiers;<org.apache.fop.extensions.ExtensionElementMapping: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.getModifiers;<org.apache.fop.fo.StandardElementMapping: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.getModifiers;<org.apache.fop.svg.SVGElementMapping: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.getModifiers;<org.apache.xerces.impl.dv.dtd.DTDDVFactoryImpl: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.getModifiers;<org.apache.xerces.jaxp.SAXParserFactoryImpl: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.getModifiers;<org.apache.xerces.parsers.XIncludeAwareParserConfiguration: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.getModifiers;<sun.awt.resources.awt: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.getModifiers;<sun.reflect.GeneratedConstructorAccessor$HASHED$0e4246823aa29aa7fbbff987b34b24f42d5ed30f: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.getModifiers;<sun.security.provider.SHA: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.getModifiers;<sun.security.provider.SHA: void <init>()>;sun.reflect.NativeConstructorAccessorImpl.newInstance;30;isAccessible=true;
Constructor.getModifiers;<sun.security.provider.X509Factory: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.getModifiers;<sun.security.rsa.RSAKeyFactory: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.getModifiers;<sun.security.rsa.RSASignature$SHA1withRSA: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.getModifiers;<sun.security.rsa.SunRsaSign: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.getModifiers;<sun.text.resources.FormatData: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.getModifiers;<sun.text.resources.FormatData_en: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.getModifiers;<sun.text.resources.FormatData_en_US: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.getModifiers;<sun.util.resources.CurrencyNames: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.getModifiers;<sun.util.resources.CurrencyNames_en_US: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<dacapo.fop.FopHarness: void <init>(dacapo.parser.Config,java.io.File)>;dacapo.TestHarness.runBenchmark;270;isAccessible=false;
Constructor.newInstance;<org.apache.fop.extensions.ExtensionElementMapping: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<org.apache.fop.fo.StandardElementMapping: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<org.apache.fop.svg.SVGElementMapping: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<org.apache.xerces.impl.dv.dtd.DTDDVFactoryImpl: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<org.apache.xerces.jaxp.SAXParserFactoryImpl: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<org.apache.xerces.parsers.XIncludeAwareParserConfiguration: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<sun.awt.resources.awt: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<sun.reflect.GeneratedConstructorAccessor$HASHED$0e4246823aa29aa7fbbff987b34b24f42d5ed30f: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<sun.security.pkcs11.SunPKCS11: void <init>(java.lang.String)>;sun.security.jca.ProviderConfig$4.run;262;isAccessible=false;
Constructor.newInstance;<sun.security.provider.SHA: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<sun.security.provider.X509Factory: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<sun.security.rsa.RSAKeyFactory: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<sun.security.rsa.RSASignature$SHA1withRSA: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<sun.security.rsa.SunRsaSign: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<sun.security.x509.AuthorityKeyIdentifierExtension: void <init>(java.lang.Boolean,java.lang.Object)>;sun.security.x509.CertificateExtensions.parseExtension;94;isAccessible=false;
Constructor.newInstance;<sun.security.x509.KeyUsageExtension: void <init>(java.lang.Boolean,java.lang.Object)>;sun.security.x509.CertificateExtensions.parseExtension;94;isAccessible=false;
Constructor.newInstance;<sun.security.x509.NetscapeCertTypeExtension: void <init>(java.lang.Boolean,java.lang.Object)>;sun.security.x509.CertificateExtensions.parseExtension;94;isAccessible=false;
Constructor.newInstance;<sun.security.x509.SubjectAlternativeNameExtension: void <init>(java.lang.Boolean,java.lang.Object)>;sun.security.x509.CertificateExtensions.parseExtension;94;isAccessible=false;
Constructor.newInstance;<sun.security.x509.SubjectKeyIdentifierExtension: void <init>(java.lang.Boolean,java.lang.Object)>;sun.security.x509.CertificateExtensions.parseExtension;94;isAccessible=false;
Constructor.newInstance;<sun.text.resources.FormatData: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<sun.text.resources.FormatData_en: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<sun.text.resources.FormatData_en_US: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<sun.util.resources.CurrencyNames: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<sun.util.resources.CurrencyNames_en_US: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Field.get*;<java.util.CurrencyData: int[] otherCurrenciesDFD>;java.util.Currency$1.run;136;isAccessible=false;
Field.get*;<java.util.CurrencyData: int[] scNewCurrenciesDFD>;java.util.Currency$1.run;134;isAccessible=false;
Field.get*;<java.util.CurrencyData: int[] scOldCurrenciesDFD>;java.util.Currency$1.run;133;isAccessible=false;
Field.get*;<java.util.CurrencyData: java.lang.String mainTable>;java.util.Currency$1.run;129;isAccessible=false;
Field.get*;<java.util.CurrencyData: java.lang.String otherCurrencies>;java.util.Currency$1.run;135;isAccessible=false;
Field.get*;<java.util.CurrencyData: java.lang.String[] scNewCurrencies>;java.util.Currency$1.run;132;isAccessible=false;
Field.get*;<java.util.CurrencyData: java.lang.String[] scOldCurrencies>;java.util.Currency$1.run;131;isAccessible=false;
Field.get*;<java.util.CurrencyData: long[] scCutOverTimes>;java.util.Currency$1.run;130;isAccessible=false;
Field.getDeclaringClass;<java.util.CurrencyData: int[] otherCurrenciesDFD>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;25;isAccessible=false;
Field.getDeclaringClass;<java.util.CurrencyData: int[] scNewCurrenciesDFD>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;25;isAccessible=false;
Field.getDeclaringClass;<java.util.CurrencyData: int[] scOldCurrenciesDFD>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;25;isAccessible=false;
Field.getDeclaringClass;<java.util.CurrencyData: java.lang.String mainTable>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;25;isAccessible=false;
Field.getDeclaringClass;<java.util.CurrencyData: java.lang.String otherCurrencies>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;25;isAccessible=false;
Field.getDeclaringClass;<java.util.CurrencyData: java.lang.String[] scNewCurrencies>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;25;isAccessible=false;
Field.getDeclaringClass;<java.util.CurrencyData: java.lang.String[] scOldCurrencies>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;25;isAccessible=false;
Field.getDeclaringClass;<java.util.CurrencyData: long[] scCutOverTimes>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;25;isAccessible=false;
Field.getModifiers;<java.util.CurrencyData: int[] otherCurrenciesDFD>;sun.misc.Unsafe.fieldOffset;551;isAccessible=false;
Field.getModifiers;<java.util.CurrencyData: int[] otherCurrenciesDFD>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;16;isAccessible=false;
Field.getModifiers;<java.util.CurrencyData: int[] otherCurrenciesDFD>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;17;isAccessible=false;
Field.getModifiers;<java.util.CurrencyData: int[] otherCurrenciesDFD>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;18;isAccessible=false;
Field.getModifiers;<java.util.CurrencyData: int[] otherCurrenciesDFD>;sun.reflect.UnsafeFieldAccessorImpl.<init>;31;isAccessible=false;
Field.getModifiers;<java.util.CurrencyData: int[] scNewCurrenciesDFD>;sun.misc.Unsafe.fieldOffset;551;isAccessible=false;
Field.getModifiers;<java.util.CurrencyData: int[] scNewCurrenciesDFD>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;16;isAccessible=false;
Field.getModifiers;<java.util.CurrencyData: int[] scNewCurrenciesDFD>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;17;isAccessible=false;
Field.getModifiers;<java.util.CurrencyData: int[] scNewCurrenciesDFD>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;18;isAccessible=false;
Field.getModifiers;<java.util.CurrencyData: int[] scNewCurrenciesDFD>;sun.reflect.UnsafeFieldAccessorImpl.<init>;31;isAccessible=false;
Field.getModifiers;<java.util.CurrencyData: int[] scOldCurrenciesDFD>;sun.misc.Unsafe.fieldOffset;551;isAccessible=false;
Field.getModifiers;<java.util.CurrencyData: int[] scOldCurrenciesDFD>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;16;isAccessible=false;
Field.getModifiers;<java.util.CurrencyData: int[] scOldCurrenciesDFD>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;17;isAccessible=false;
Field.getModifiers;<java.util.CurrencyData: int[] scOldCurrenciesDFD>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;18;isAccessible=false;
Field.getModifiers;<java.util.CurrencyData: int[] scOldCurrenciesDFD>;sun.reflect.UnsafeFieldAccessorImpl.<init>;31;isAccessible=false;
Field.getModifiers;<java.util.CurrencyData: java.lang.String mainTable>;sun.misc.Unsafe.fieldOffset;551;isAccessible=false;
Field.getModifiers;<java.util.CurrencyData: java.lang.String mainTable>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;16;isAccessible=false;
Field.getModifiers;<java.util.CurrencyData: java.lang.String mainTable>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;17;isAccessible=false;
Field.getModifiers;<java.util.CurrencyData: java.lang.String mainTable>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;18;isAccessible=false;
Field.getModifiers;<java.util.CurrencyData: java.lang.String mainTable>;sun.reflect.UnsafeFieldAccessorImpl.<init>;31;isAccessible=false;
Field.getModifiers;<java.util.CurrencyData: java.lang.String otherCurrencies>;sun.misc.Unsafe.fieldOffset;551;isAccessible=false;
Field.getModifiers;<java.util.CurrencyData: java.lang.String otherCurrencies>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;16;isAccessible=false;
Field.getModifiers;<java.util.CurrencyData: java.lang.String otherCurrencies>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;17;isAccessible=false;
Field.getModifiers;<java.util.CurrencyData: java.lang.String otherCurrencies>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;18;isAccessible=false;
Field.getModifiers;<java.util.CurrencyData: java.lang.String otherCurrencies>;sun.reflect.UnsafeFieldAccessorImpl.<init>;31;isAccessible=false;
Field.getModifiers;<java.util.CurrencyData: java.lang.String[] scNewCurrencies>;sun.misc.Unsafe.fieldOffset;551;isAccessible=false;
Field.getModifiers;<java.util.CurrencyData: java.lang.String[] scNewCurrencies>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;16;isAccessible=false;
Field.getModifiers;<java.util.CurrencyData: java.lang.String[] scNewCurrencies>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;17;isAccessible=false;
Field.getModifiers;<java.util.CurrencyData: java.lang.String[] scNewCurrencies>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;18;isAccessible=false;
Field.getModifiers;<java.util.CurrencyData: java.lang.String[] scNewCurrencies>;sun.reflect.UnsafeFieldAccessorImpl.<init>;31;isAccessible=false;
Field.getModifiers;<java.util.CurrencyData: java.lang.String[] scOldCurrencies>;sun.misc.Unsafe.fieldOffset;551;isAccessible=false;
Field.getModifiers;<java.util.CurrencyData: java.lang.String[] scOldCurrencies>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;16;isAccessible=false;
Field.getModifiers;<java.util.CurrencyData: java.lang.String[] scOldCurrencies>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;17;isAccessible=false;
Field.getModifiers;<java.util.CurrencyData: java.lang.String[] scOldCurrencies>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;18;isAccessible=false;
Field.getModifiers;<java.util.CurrencyData: java.lang.String[] scOldCurrencies>;sun.reflect.UnsafeFieldAccessorImpl.<init>;31;isAccessible=false;
Field.getModifiers;<java.util.CurrencyData: long[] scCutOverTimes>;sun.misc.Unsafe.fieldOffset;551;isAccessible=false;
Field.getModifiers;<java.util.CurrencyData: long[] scCutOverTimes>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;16;isAccessible=false;
Field.getModifiers;<java.util.CurrencyData: long[] scCutOverTimes>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;17;isAccessible=false;
Field.getModifiers;<java.util.CurrencyData: long[] scCutOverTimes>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;18;isAccessible=false;
Field.getModifiers;<java.util.CurrencyData: long[] scCutOverTimes>;sun.reflect.UnsafeFieldAccessorImpl.<init>;31;isAccessible=false;
Field.getName;<java.util.CurrencyData: int[] otherCurrenciesDFD>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.CurrencyData: int[] scNewCurrenciesDFD>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.CurrencyData: int[] scOldCurrenciesDFD>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.CurrencyData: java.lang.String mainTable>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.CurrencyData: java.lang.String otherCurrencies>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.CurrencyData: java.lang.String version>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.CurrencyData: java.lang.String[] scNewCurrencies>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.CurrencyData: java.lang.String[] scOldCurrencies>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.CurrencyData: long[] scCutOverTimes>;java.lang.Class.searchFields;;isAccessible=false;
Method.getName;<java.lang.Thread: boolean holdsLock(java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: boolean interrupted()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: boolean isAlive()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: boolean isDaemon()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: boolean isInterrupted()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: int activeCount()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: int countStackFrames()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: int enumerate(java.lang.Thread[])>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: int getPriority()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: java.lang.String getName()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: java.lang.String toString()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: java.lang.Thread currentThread()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: java.lang.Thread$State getState()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getUncaughtExceptionHandler()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: java.lang.ThreadGroup getThreadGroup()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: java.util.Map getAllStackTraces()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: long getId()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: void checkAccess()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: void destroy()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: void dumpStack()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: void interrupt()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: void join()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: void join(long)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: void join(long,int)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: void resume()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: void run()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: void setDaemon(boolean)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: void setDefaultUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: void setName(java.lang.String)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: void setPriority(int)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: void setUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: void sleep(long)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: void sleep(long,int)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: void start()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: void stop()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: void stop(java.lang.Throwable)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: void suspend()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: void yield()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.invoke;<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>;org.apache.fop.apps.Options.loadStandardConfiguration;170;isAccessible=false;
